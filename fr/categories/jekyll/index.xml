<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>挖矿123</title>
    <link>https://wakuang123.com/fr/categories/jekyll/index.xml</link>
    <description>Recent content on 挖矿123</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn-zh</language>
    <copyright>© 2018 wakuang123.com</copyright>
    <atom:link href="https://wakuang123.com/fr/categories/jekyll/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Migrer vers Hugo depuis Jekyll</title>
      <link>https://wakuang123.com/fr/2014/03/migrer-vers-hugo-depuis-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://wakuang123.com/fr/2014/03/migrer-vers-hugo-depuis-jekyll/</guid>
      <description>&lt;h2 id=&#34;déplacez-le-contenu-statique-vers-static&#34;&gt;Déplacez le contenu statique vers &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Jekyll a une règle comme quoi tout répertoire qui ne commence pas par &lt;code&gt;_&lt;/code&gt; sera
copié tel-quel dans le répertoire &lt;code&gt;_site&lt;/code&gt;. Hugo garde tout le contenu statique
dans le répertoire &lt;code&gt;static&lt;/code&gt;. Vous devez donc déplacer tout ce type de contenu
là-dedans. Avec Jekylll, l&amp;rsquo;arborescence ressemblant à ceci :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
doit devenir&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ static/
        ▾ images/
            logo.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En outre, vous allez devoir déplacer tous les fichiers présents à la racine vers
le répertoire &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;créez-votre-configuration-hugo&#34;&gt;Créez votre configuration Hugo&lt;/h2&gt;

&lt;p&gt;Hugo peut lire votre fichier de configuration au format JSON, YAML et TOML. Hugo
supporte également les paramètres de configuration. Plus d&amp;rsquo;informations sur la
&lt;a href=&#34;https://wakuang123.com/overview/configuration/&#34;&gt;documentation de configuration Hugo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;définiez-votre-répertoire-de-publication-sur-site&#34;&gt;Définiez votre répertoire de publication sur &lt;code&gt;_site&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;La valeur par défaut pour Jekyll est d&amp;rsquo;utiliser le répertoire &lt;code&gt;_site&lt;/code&gt; pour
publier le contenu. Pour Hugo, le répertoire de publication est &lt;code&gt;public&lt;/code&gt;. Si,
comme moi, vous avez &lt;a href=&#34;http://blog.blindgaenger.net/generate_github_pages_in_a_submodule.ht
ml&#34;&gt;lié &lt;code&gt;_site&lt;/code&gt; vers un sous-module git sur la branche
&lt;code&gt;gh-pages&lt;/code&gt;&lt;/a&gt;, vous allez vouloir avoir quelques alternatives :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Changez votre lien du sous-module &lt;code&gt;gh-pages&lt;/code&gt; pour pointer sur public au lieu
de &lt;code&gt;_site&lt;/code&gt; (recommendé).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git submodule deinit _site
git rm _site
git submodule add -b gh-pages
    git@github.com:your-username/your-repo.git public
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ou modifiez la configuration de Hugo pour utiliser le répertoire &lt;code&gt;_site&lt;/code&gt; au
lieu de &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    ..
    &amp;quot;publishdir&amp;quot;: &amp;quot;_site&amp;quot;,
    ..
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;convertir-un-thème-jekyll-pour-hugo&#34;&gt;Convertir un thème Jekyll pour Hugo&lt;/h2&gt;

&lt;p&gt;C&amp;rsquo;est la majeure partie du travail. La documentation est votre ami.
Vous devriez vous référer à &lt;a href=&#34;http://jekyllrb.com/docs/templates/&#34;&gt;la documentation des thèmes de Jekyll&lt;/a&gt; si vous devez vous rafraîchir la mémoire
sur la façon dont vous avez construit votre blog et &lt;a href=&#34;https://wakuang123.com/layout/templates/&#34;&gt;les thèmes de Hugo&lt;/a&gt; pour apprendre la manière de faire sur Hugo.&lt;/p&gt;

&lt;p&gt;Pour vous donner un point de référence, la conversion du thème pour
&lt;a href=&#34;http://heyitsalex.net/&#34;&gt;heyitsalex.net&lt;/a&gt; ne m&amp;rsquo;a pris que quelques heures.&lt;/p&gt;

&lt;h2 id=&#34;convertir-les-extensions-jekyll-vers-des-shortcodes-hugo&#34;&gt;Convertir les extensions Jekyll vers des shortcodes Hugo&lt;/h2&gt;

&lt;p&gt;Jekyll support les &lt;a href=&#34;http://jekyllrb.com/docs/plugins/&#34;&gt;extensions&lt;/a&gt;; Hugo lui a
les &lt;a href=&#34;https://wakuang123.com/doc/shortcodes/&#34;&gt;shortcodes&lt;/a&gt;. C&amp;rsquo;est assez banal les porter.&lt;/p&gt;

&lt;h3 id=&#34;implémentation&#34;&gt;Implémentation&lt;/h3&gt;

&lt;p&gt;Comme exemple, j&amp;rsquo;utilise une extension pour avoir un &lt;a href=&#34;https://githu
b.com/alexandre-normand/alexandre-normand/blob/74bb12036a71334fdb7dba84e073382fc
06908ec/_plugins/image_tag.rb&#34;&gt;&lt;code&gt;image_tag&lt;/code&gt;&lt;/a&gt; presonnalisé pour générer les images avec une
légende sur Jekyll. J&amp;rsquo;ai vu que Hugo implémente un shortcode qui fait exactement
la même chose.&lt;/p&gt;

&lt;p&gt;Extension Jekyll :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Jekyll
  class ImageTag &amp;lt; Liquid::Tag
    @url = nil
    @caption = nil
    @class = nil
    @link = nil
    // Patterns
    IMAGE_URL_WITH_CLASS_AND_CAPTION =
    IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK =
        /(\w+)(\s+)((https?:\/\/|\/)(\S+))(\s+)&amp;quot;(.*?)&amp;quot;(\s+)-&amp;gt;
        ((https?:\/\/|\/)(\S+))(\s*)/i
    IMAGE_URL_WITH_CAPTION = /((https?:\/\/|\/)(\S+))(\s+)&amp;quot;(.*?)&amp;quot;/i
    IMAGE_URL_WITH_CLASS = /(\w+)(\s+)((https?:\/\/|\/)(\S+))/i
    IMAGE_URL = /((https?:\/\/|\/)(\S+))/i
    def initialize(tag_name, markup, tokens)
      super
      if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK
        @class   = $1
        @url     = $3
        @caption = $7
        @link = $9
      elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION
        @class   = $1
        @url     = $3
        @caption = $7
      elsif markup =~ IMAGE_URL_WITH_CAPTION
        @url     = $1
        @caption = $5
      elsif markup =~ IMAGE_URL_WITH_CLASS
        @class = $1
        @url   = $3
      elsif markup =~ IMAGE_URL
        @url = $1
      end
    end
    def render(context)
      if @class
        source = &amp;quot;&amp;lt;figure class=&#39;#{@class}&#39;&amp;gt;&amp;quot;
      else
        source = &amp;quot;&amp;lt;figure&amp;gt;&amp;quot;
      end
      if @link
        source += &amp;quot;&amp;lt;a href=\&amp;quot;#{@link}\&amp;quot;&amp;gt;&amp;quot;
      end
      source += &amp;quot;&amp;lt;img src=\&amp;quot;#{@url}\&amp;quot;&amp;gt;&amp;quot;
      if @link
        source += &amp;quot;&amp;lt;/a&amp;gt;&amp;quot;
      end
      source += &amp;quot;&amp;lt;figcaption&amp;gt;#{@caption}&amp;lt;/figcaption&amp;gt;&amp;quot; if @caption
      source += &amp;quot;&amp;lt;/figure&amp;gt;&amp;quot;
      source
    end
  end
end
Liquid::Template.register_tag(&#39;image&#39;, Jekyll::ImageTag)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Écrite en tant que shortcode Hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- image --&amp;gt;
&amp;lt;figure {{ with .Get &amp;quot;class&amp;quot; }}class=&amp;quot;{{.}}&amp;quot;{{ end }}&amp;gt;
    {{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt;{{ end }}
        &amp;lt;img src=&amp;quot;{{ .Get &amp;quot;src&amp;quot; }}&amp;quot;
            {{ if or (.Get &amp;quot;alt&amp;quot;) (.Get &amp;quot;caption&amp;quot;) }}
                alt=&amp;quot;{{ with .Get &amp;quot;alt&amp;quot;}}
                        {{.}}
                     {{else}}
                        {{ .Get &amp;quot;caption&amp;quot; }}
                     {{ end }}&amp;quot;
               {{ end }} /&amp;gt;
    {{ if .Get &amp;quot;link&amp;quot;}}&amp;lt;/a&amp;gt;{{ end }}
    {{ if or (or (.Get &amp;quot;title&amp;quot;) (.Get &amp;quot;caption&amp;quot;)) (.Get &amp;quot;attr&amp;quot;)}}
    &amp;lt;figcaption&amp;gt;{{ if isset .Params &amp;quot;title&amp;quot; }}
        {{ .Get &amp;quot;title&amp;quot; }}{{ end }}
        {{ if or (.Get &amp;quot;caption&amp;quot;) (.Get &amp;quot;attr&amp;quot;)}}&amp;lt;p&amp;gt;
        {{ .Get &amp;quot;caption&amp;quot; }}
        {{ with .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt; {{ end }}
            {{ .Get &amp;quot;attr&amp;quot; }}
        {{ if .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;/a&amp;gt; {{ end }}
        &amp;lt;/p&amp;gt; {{ end }}
    &amp;lt;/figcaption&amp;gt;
    {{ end }}
&amp;lt;/figure&amp;gt;
&amp;lt;!-- image --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;utilisation&#34;&gt;Utilisation&lt;/h3&gt;

&lt;p&gt;J&amp;rsquo;ai simplement changé :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% image
    full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg
    &amp;quot;One of my favorite touristy-type photos. I secretly waited for the
    good light while we were &amp;quot;having fun&amp;quot; and took this. Only regret: a
    stupid pole in the top-left corner of the frame I had to clumsily get
    rid of at post-processing.&amp;quot;
    -&amp;gt;http://www.flickr.com/photos/alexnormand/4829260124/in/
        set-72157624547713078/ %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pour cela (cet exemple utilise une version légèrement étendue nommée &lt;code&gt;fig&lt;/code&gt;,
différente de la &lt;code&gt;figure&lt;/code&gt; intégrée) :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fig class=&amp;quot;full&amp;quot;
    src=&amp;quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg&amp;quot;
    title=&amp;quot;One of my favorite touristy-type photos. I secretly waited for the
    good light while we were having fun and took this. Only regret: a stupid
    pole in the top-left corner of the frame I had to clumsily get rid of at
    post-processing.&amp;quot;
    link=&amp;quot;http://www.flickr.com/photos/alexnormand/4829260124/in/
            set-72157624547713078/&amp;quot; %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comme bonus, les paramètres nommés des shortcodes sont plus lisibles.&lt;/p&gt;

&lt;h2 id=&#34;touches-finales&#34;&gt;Touches finales&lt;/h2&gt;

&lt;h3 id=&#34;corriger-le-contenu&#34;&gt;Corriger le contenu&lt;/h3&gt;

&lt;p&gt;Suivant le nombre de modifications que vous avez effectué sur chaque articles
avec Jekyll, cette étape requierra plus ou moins d&amp;rsquo;efforts. Il n&amp;rsquo;y a pas de
règles rigoureuses ici, si ce n&amp;rsquo;est que &lt;code&gt;hugo server --watch&lt;/code&gt; est votre ami.
Testez vos modifications et corrigez les erreurs au besoin.&lt;/p&gt;

&lt;h3 id=&#34;nettoyez-le-tout&#34;&gt;Nettoyez le tout&lt;/h3&gt;

&lt;p&gt;Vous voudrez sûrement supprimer votre configuration Jekyll maintenant que tout
est fini. Exact, pensez à supprimer tout ce qui est inutilisé.&lt;/p&gt;

&lt;h2 id=&#34;un-exemple-pratique&#34;&gt;Un exemple pratique&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://heyitsalex.net/&#34;&gt;Hey, it&amp;rsquo;s Alex&lt;/a&gt; a été migré de Jekyll vers Hugo en
moins de temps qu&amp;rsquo;une journée père enfant. Vous pouvez trouver toutes les
modification en regardant ce &lt;a href=&#34;https://github.com/alexandre-normand/alexand
re-normand/compare/869d69435bd2665c3fbf5b5c78d4c22759d7613a...b7f6605b1265e83b4b
81495423294208cc74d610&#34;&gt;diff&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>